package com.cardprototype.core.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.ManyToOne;

import com.cardprototype.bootstrap.pool.AbilityPool;
import com.cardprototype.core.domain.ability.Ability;

/**
 * A player
 * @author Kevin Deyne
 */
@Entity
public class Player implements Serializable {

	private static final long serialVersionUID = 1L;
	public static final String EXAMPLE_ID = "example-player"; //TODO

	@Column(name = "id", updatable = false, nullable = false, length = 32)
	@Id
	private String id;

	@ElementCollection
	private List<String> abilities;

	@Column(name = "round", nullable = false)
	private int round;

	@Column(name = "def", nullable = false)
	private int def;

	@Column(name = "acc", nullable = false)
	private int acc;

	@ManyToOne(cascade=javax.persistence.CascadeType.ALL)
	private Enemy enemy;

	public Player(){
		this.abilities = new ArrayList<String>();
		setEnemy(new Enemy());
	}

	public void setupStartAbilities(){
		this.round = 1;
		List<Ability> starterAbilities = AbilityPool.getAbilityPool().getStartAbilities();
		for(Ability ability : starterAbilities){
			this.abilities.add(ability.getId());
		}
		this.acc = 0;
		this.def = 0;
	}

	public List<String> getAbilityIds() {
		return this.abilities;
	}

	public List<Ability> getAbilities() {
		AbilityPool pool = AbilityPool.getAbilityPool();
		return pool.getAbilities(this.abilities);
	}

	public void setAbilities(List<String> abilities) {
		this.abilities = abilities;
	}

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public int getRound() {
		return this.round;
	}

	public void setRound(int round) {
		this.round = round;
	}

	public int getDef() {
		return this.def;
	}

	public void setDef(int def) {
		this.def = addWithRange(def);
	}

	public int getAcc() {
		return this.acc;
	}

	public void setAcc(int acc) {
		this.acc = addWithRange(acc);
	}

	private int addWithRange(int value) {
		if(value > 5){
			value = 5;
		} else if(value < -5){
			value = -5;
		}
		return value;
	}

	public Enemy getEnemy() {
		return this.enemy;
	}

	public void setEnemy(Enemy enemy) {
		this.enemy = enemy;
	}
}